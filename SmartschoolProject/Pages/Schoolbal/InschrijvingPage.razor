@page "/inschrijving"
@page "/inschrijving/{naam}/{secret}"
@inject GoogleGebruiker Gebruiker
@inject IMatToaster Toaster
@inject NavigationManager NavigationManager

@if (geenParameters)
{
    <MatDialog @bind-IsOpen="@dialogIsOpen">
        <MatDialogContent>
            <MatDialogTitle>WAARSCHUWING, U MOET 16+ ZIJN! DIT WORDT GECONTROLEERD AAN DE INKOM</MatDialogTitle>
            <MatTextField @bind-Value="@gast1Naam" Style="color: #89b129;" Label="Naam Gast 1" FullWidth="true"></MatTextField>
            <MatTextField @bind-Value="@gast2Naam" Style="color: #89b129;" Label="Naam Gast 2" FullWidth="true"></MatTextField>
        </MatDialogContent>
        <MatDialogActions>
            <MatButton @onclick="@Sluit">ANNULEER</MatButton>
            <MatButton OnClick="@OkClick">SCHRIJF IN</MatButton>
        </MatDialogActions>
    </MatDialog>

    <style>
        .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {
            color: #89b129;
        }
    </style>
}

@code
{
    [Parameter]
    public string Naam { get; set; }

    [Parameter]
    public string Secret { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private DBConnection DBConnection { get; set; }

    string error = "";

    bool dialogIsOpen = false;
    bool geenParameters = true;

    public Gast gastheer;
    public Gast gast1;
    public Gast gast2;

    public Inschrijving inschrijving;

    public string gastheerNaam = "";
    public string gast1Naam = "";
    public string gast2Naam = "";

    protected override void OnInitialized()
    {
        this.DBConnection = new DBConnection();

        Inschrijving temp = DBConnection.GetInschrijving(new Gast(Gebruiker.GebruikerInfo.Voornaam + Gebruiker.GebruikerInfo.Naam));

        if (temp != null)
        {
            Toaster.Add("Je bent al ingeschreven", MatToastType.Info, "Opgelet");
            NavigationManager.NavigateTo("/", true);
        }

        if (string.IsNullOrEmpty(Naam) || string.IsNullOrEmpty(Secret))
        {
            geenParameters = true;
            dialogIsOpen = true;
        }
        else
        {
            geenParameters = false;
            CheckSecret();
        }
    }

    void Sluit()
    {
        dialogIsOpen = false;
    }

    void OkClick()
    {
        string naam = Gebruiker.GebruikerInfo.Voornaam + Gebruiker.GebruikerInfo.Naam;

        gastheer = new Gast(naam);
        inschrijving = new Inschrijving(gastheer, "");

        gast1 = new Gast(gast1Naam.Trim());
        gast2 = new Gast(gast2Naam.Trim());

        inschrijving.gastheer = gastheer;
        inschrijving.gast1 = gast1;
        inschrijving.gast2 = gast2;
        inschrijving.klas = Gebruiker.GebruikerInfo.Groups[0].Name;

        inschrijving.secret = Guid.NewGuid().ToString();

        bool temp = DBConnection.AddInschrijving(inschrijving);

        this.SendEmail();

        dialogIsOpen = false;

    }

    async void SendEmail()
    {
        MailClass mailClass = new MailClass();

        string temp = Gebruiker.GebruikerInfo.Voornaam + Gebruiker.GebruikerInfo.Naam;
        bool succes = mailClass.SendMail((await AuthenticationStateTask).User.Identity.Name, temp, this.inschrijving.secret);

        if (succes)
        {
            Toaster.Add("Gelieven u inschrijving te bevestigen via u school email", MatToastType.Success, "Succes!");
        }
        else
        {
            Toaster.Add("Bevestigings email niet verstuurd, gelieven contact op te nemen met een IT verantwoordelijke", MatToastType.Danger, "Error");
        }
    }

    void CheckSecret()
    {
        //Kijken dat de secret bij de email hoort in de databank en dan bevestigen op true zetten
        Gast gastheer = new Gast(this.Naam);

        Inschrijving inschrijving = DBConnection.GetInschrijving(gastheer);
        this.inschrijving = inschrijving;

        if (inschrijving.secret == this.Secret)
        {
            //DB Goedkeuren
            inschrijving.gastheer.Confirmed = true;

            bool succes = this.DBConnection.VeranderInschrijvingConfirmatie(inschrijving);

            if (succes)
            {
                Toaster.Add("Inschrijving goedgekeurd", MatToastType.Success, "Succes!");
            }
            else
            {
                Toaster.Add("Er is een fout opgelopen bij het goedkeuren van de bevestiging, gelieven contact op te nemen met een IT verantwoordelijke", MatToastType.Danger, "Error");
            }
        }
        else
        {
            Toaster.Add("Inschrijving niet goedgekeurd, er is een nieuwe email verstuurd", MatToastType.Danger, "Error");
            this.SendEmail();
        }
    }
}