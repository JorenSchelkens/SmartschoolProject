@page "/inschrijving"
@inject GoogleGebruiker Gebruiker

@inject IMatToaster Toaster

<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogContent>
        <MatTextField @bind-Value="@gast1Naam" Style="color: #89b129;" Label="Naam Gast 1" FullWidth="true"></MatTextField>
        <MatCheckbox @bind-Value="@gast1plus16" Label="16+"></MatCheckbox>
        <MatTextField @bind-Value="@gast2Naam" Style="color: #89b129;" Label="Naam Gast 2" FullWidth="true"></MatTextField>
        <MatCheckbox @bind-Value="@gast2plus16" Label="16+"></MatCheckbox>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton @onclick="@Sluit">ANNULEER</MatButton>
        <MatButton OnClick="@OkClick">SCHRIJF IN</MatButton>
    </MatDialogActions>
</MatDialog>

<style>
    .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {
        color: #89b129;
    }
</style>

@code
{
    string error = "";

    bool gast1plus16 = false;
    bool gast2plus16 = false;
    bool dialogIsOpen = false;

    public Gast gastheer;
    public Gast gast1;
    public Gast gast2;

    public Inschrijving inschrijving;

    public string gastheerNaam = "";
    public string gast1Naam = "";
    public string gast2Naam = "";

    protected override void OnInitialized()
    {
        dialogIsOpen = true;
    }

    void Sluit()
    {
        dialogIsOpen = false;
    }

    void OkClick()
    {
        /*Controleer of gast 1 is ingevuld*/
        if (gast2Naam.Trim().Equals("") && gast1Naam.Trim().Equals("") && !gast1plus16)
        {
            Toaster.Add("Vul een gast in", MatToastType.Danger, "Error");

        }
        else if (!gast1Naam.Trim().Equals("") && gast1plus16)/*Als gebruiker 2 is ingevuld en 1 niet, verander dan*/
        {
            string naam = Gebruiker.GebruikerInfo.Voornaam + Gebruiker.GebruikerInfo.Naam;

            gastheer = new Gast(naam);

            inschrijving = new Inschrijving(gastheer, "");
            gast1 = new Gast(gast1Naam);

            inschrijving.gast1 = gast1;
            inschrijving.gastheer = gastheer;
            inschrijving.klas = Gebruiker.GebruikerInfo.Groups[0].Name;

            dialogIsOpen = false;
        }
        else if (!gast1Naam.Trim().Equals("") && !gast1plus16)/*Controleer of gast1 is ingevuld en 16+ is*/
        {
            Toaster.Add("U kan geen gasten meepakken onder 16 jaar. Dit wordt gecontroleerd aan de inkom.", MatToastType.Danger, "Error");

        }
        else if (!gast2Naam.Trim().Equals("") && gast1Naam.Trim().Equals("") && gast2plus16)/*Als gebruiker 2 is ingevuld en 1 niet, verander dan*/
        {
            string naam = Gebruiker.GebruikerInfo.Voornaam + Gebruiker.GebruikerInfo.Naam;

            gastheer = new Gast(naam);

            inschrijving = new Inschrijving(gastheer, "");
            gast1 = new Gast(gast2Naam);

            inschrijving.gast1 = gast1;
            inschrijving.gastheer = gastheer;
            inschrijving.klas = Gebruiker.GebruikerInfo.Groups[0].Name;

            dialogIsOpen = false;
        }
        else if (!gast2Naam.Trim().Equals("") && !gast2plus16)
        {
            Toaster.Add("U kan geen gasten meepakken onder 16 jaar. Dit wordt gecontroleerd aan de inkom.", MatToastType.Danger, "Error");
        }
        else
        {
            string naam = Gebruiker.GebruikerInfo.Voornaam + Gebruiker.GebruikerInfo.Naam;

            gastheer = new Gast(naam);
            inschrijving = new Inschrijving(gastheer, "");

            gast1 = new Gast(gast1Naam);
            gast2 = new Gast(gast2Naam);

            inschrijving.gastheer = gastheer;
            inschrijving.gast1 = gast1;
            inschrijving.gast2 = gast2;
            inschrijving.klas = Gebruiker.GebruikerInfo.Groups[0].Name;

            dialogIsOpen = false;
        }


    }
}